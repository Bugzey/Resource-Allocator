"""Added iteration, allocation and request tables

Revision ID: 35654575f599
Revises: 249635ae0402
Create Date: 2022-08-25 12:38:25.961068

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '35654575f599'
down_revision = '249635ae0402'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('allocation', sa.Column('iteration_id', sa.Integer(), nullable=False), schema='resource_allocator')
    op.add_column('allocation', sa.Column('date', sa.Date(), nullable=False), schema='resource_allocator')
    op.add_column('allocation', sa.Column('user_id', sa.Integer(), nullable=False), schema='resource_allocator')
    op.add_column('allocation', sa.Column('source_request_id', sa.Integer(), nullable=False), schema='resource_allocator')
    op.add_column('allocation', sa.Column('allocated_resource_id', sa.Integer(), nullable=True), schema='resource_allocator')
    op.add_column('allocation', sa.Column('points', sa.Integer(), nullable=False), schema='resource_allocator')
    op.add_column('allocation', sa.Column('total_points', sa.Integer(), nullable=False), schema='resource_allocator')
    op.create_foreign_key(None, 'allocation', 'request', ['source_request_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.create_foreign_key(None, 'allocation', 'iteration', ['iteration_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.create_foreign_key(None, 'allocation', 'user', ['user_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.create_foreign_key(None, 'allocation', 'resource', ['allocated_resource_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.add_column('iteration', sa.Column('start_time', sa.DateTime(), nullable=False), schema='resource_allocator')
    op.add_column('iteration', sa.Column('end_time', sa.DateTime(), nullable=False), schema='resource_allocator')
    op.add_column('iteration', sa.Column('accepts_requests', sa.Boolean(), server_default='true', nullable=False), schema='resource_allocator')
    op.add_column('request', sa.Column('iteration_id', sa.Integer(), nullable=False), schema='resource_allocator')
    op.add_column('request', sa.Column('requested_date', sa.Date(), nullable=False), schema='resource_allocator')
    op.add_column('request', sa.Column('user_id', sa.Integer(), nullable=False), schema='resource_allocator')
    op.add_column('request', sa.Column('requested_resource_id', sa.Integer(), nullable=True), schema='resource_allocator')
    op.add_column('request', sa.Column('requested_resource_group_id', sa.Integer(), nullable=True), schema='resource_allocator')
    op.create_foreign_key(None, 'request', 'resource_group', ['requested_resource_group_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.create_foreign_key(None, 'request', 'user', ['user_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.create_foreign_key(None, 'request', 'iteration', ['iteration_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.create_foreign_key(None, 'request', 'resource', ['requested_resource_id'], ['id'], source_schema='resource_allocator', referent_schema='resource_allocator')
    op.alter_column('resource_to_group', 'resource_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='resource_allocator')
    op.alter_column('resource_to_group', 'resource_group_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='resource_allocator')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('resource_to_group', 'resource_group_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='resource_allocator')
    op.alter_column('resource_to_group', 'resource_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='resource_allocator')
    op.drop_constraint(None, 'request', schema='resource_allocator', type_='foreignkey')
    op.drop_constraint(None, 'request', schema='resource_allocator', type_='foreignkey')
    op.drop_constraint(None, 'request', schema='resource_allocator', type_='foreignkey')
    op.drop_constraint(None, 'request', schema='resource_allocator', type_='foreignkey')
    op.drop_column('request', 'requested_resource_group_id', schema='resource_allocator')
    op.drop_column('request', 'requested_resource_id', schema='resource_allocator')
    op.drop_column('request', 'user_id', schema='resource_allocator')
    op.drop_column('request', 'requested_date', schema='resource_allocator')
    op.drop_column('request', 'iteration_id', schema='resource_allocator')
    op.drop_column('iteration', 'accepts_requests', schema='resource_allocator')
    op.drop_column('iteration', 'end_time', schema='resource_allocator')
    op.drop_column('iteration', 'start_time', schema='resource_allocator')
    op.drop_constraint(None, 'allocation', schema='resource_allocator', type_='foreignkey')
    op.drop_constraint(None, 'allocation', schema='resource_allocator', type_='foreignkey')
    op.drop_constraint(None, 'allocation', schema='resource_allocator', type_='foreignkey')
    op.drop_constraint(None, 'allocation', schema='resource_allocator', type_='foreignkey')
    op.drop_column('allocation', 'total_points', schema='resource_allocator')
    op.drop_column('allocation', 'points', schema='resource_allocator')
    op.drop_column('allocation', 'allocated_resource_id', schema='resource_allocator')
    op.drop_column('allocation', 'source_request_id', schema='resource_allocator')
    op.drop_column('allocation', 'user_id', schema='resource_allocator')
    op.drop_column('allocation', 'date', schema='resource_allocator')
    op.drop_column('allocation', 'iteration_id', schema='resource_allocator')
    # ### end Alembic commands ###

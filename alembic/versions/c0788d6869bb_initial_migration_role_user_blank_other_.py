"""Initial migration - role, user, blank other tables

Revision ID: c0788d6869bb
Revises: 
Create Date: 2022-08-22 22:02:57.986357

"""
from alembic import op
import sqlalchemy as sa

from resource_allocator.models import RoleEnum


# revision identifiers, used by Alembic.
revision = 'c0788d6869bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allocation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    op.create_table('iteration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    op.create_table('resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    op.create_table('resource_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('role', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='resource_allocator'
    )
    #   Insert values to tables
    engine = op.get_bind()
    metadata = sa.MetaData(bind = engine, schema = "resource_allocator")
    role = sa.Table("role", metadata, autoload_with = engine)

    op.bulk_insert(
        role,
        [{"role": item.value} for item in RoleEnum],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user', schema='resource_allocator')
    op.drop_table('role', schema='resource_allocator')
    op.drop_table('resource_group', schema='resource_allocator')
    op.drop_table('resource', schema='resource_allocator')
    op.drop_table('request', schema='resource_allocator')
    op.drop_table('iteration', schema='resource_allocator')
    op.drop_table('allocation', schema='resource_allocator')
    # ### end Alembic commands ###
